
# Criar estrutura de diretório para projeto Vercel simples
project_dir = "/mnt/data/easyapp-vercel"
os.makedirs(project_dir, exist_ok=True)

# Salvar o arquivo index.html
index_html_path = os.path.join(project_dir, "index.html")
html_code = """
<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Easy App - Envie seu Relatório CGM</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f8fb;
      margin: 0;
      padding: 0;
      color: #333;
    }
    .container {
      max-width: 600px;
      margin: 50px auto;
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
    }
    h1 {
      color: #0070c0;
      font-size: 1.8rem;
      margin-bottom: 10px;
    }
    p {
      font-size: 1rem;
      line-height: 1.6;
    }
    input[type="file"] {
      margin-top: 15px;
      padding: 10px;
    }
    button {
      background-color: #0070c0;
      color: white;
      padding: 12px 20px;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      cursor: pointer;
      margin-top: 20px;
    }
    .status {
      margin-top: 20px;
      font-weight: bold;
      color: green;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Easy App - Análise do seu CGM</h1>
    <p>Envie seu relatório CGM em PDF (Libre, Dexcom, Guardian) e receba uma análise automatizada com sugestões seguras para sua rotina. Este é um teste do nosso futuro aplicativo! ✨</p>

    <form id="uploadForm">
      <label for="fileInput">Selecione o PDF do seu relatório:</label><br />
      <input type="file" id="fileInput" accept="application/pdf" required />
      <br />
      <button type="submit">Enviar Relatório</button>
      <div class="status" id="statusText"></div>
    </form>
  </div>

  <script>
    const form = document.getElementById('uploadForm');
    const statusText = document.getElementById('statusText');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const fileInput = document.getElementById('fileInput');
      const file = fileInput.files[0];
      if (!file) {
        statusText.textContent = 'Por favor, selecione um arquivo.';
        return;
      }

      const formData = new FormData();
      formData.append('file', file);

      statusText.textContent = 'Enviando...';

      try {
        const response = await fetch('https://seu-backend.com/analisar-cgm', {
          method: 'POST',
          body: formData
        });

        const data = await response.json();
        statusText.textContent = data.resposta || 'Análise recebida!';
      } catch (error) {
        statusText.textContent = 'Erro ao enviar o arquivo. Tente novamente mais tarde.';
      }
    });
  </script>
</body>
</html>
"""
with open(index_html_path, "w", encoding="utf-8") as f:
    f.write(html_code)


